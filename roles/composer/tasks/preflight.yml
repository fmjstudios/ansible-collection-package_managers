---
- name: preflight | Assert usage of systemd as an init system
  ansible.builtin.assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This role only works with systemd"

- name: preflight | Install package fact dependencies
  become: true
  ansible.builtin.package:
    name: "{{ _pkg_fact_req }}"
    state: present
  when: (_pkg_fact_req)
  vars:
    _pkg_fact_req: "{% if (ansible_pkg_mgr == 'apt') %}\
      {{ ('python-apt' if ansible_python_version is version('3', '<') else 'python3-apt') }}
      {% else %}\
      {% endif %}"

- name: preflight | Gather package facts
  ansible.builtin.package_facts:
  when: "not 'packages' in ansible_facts"

- name: preflight | Ensure the system has the necessary dependencies
  ansible.builtin.apt:
    name: "{{ __dep__ }}"
    state: present
    update_cache: true
  loop: "{{ __redis_dependencies }}"
  loop_control:
    loop_var: __dep__

- name: preflight | Assert that the Composer install variables are correctly set
  ansible.builtin.assert:
    that:
#       - nginx_package_source is defined
#       - nginx_package_source is string
#       - nginx_package_source is match ('^(os|official)$')
#       - nginx_package_official_variant is defined
#       - nginx_package_official_variant is string
#       - nginx_package_official_variant is match ('^(mainline|stable)$')
